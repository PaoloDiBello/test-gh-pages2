{"version":3,"sources":["SearchBar.js","ListUser.js","ImageLoader.js","SignUp.js","Nothing.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","preventDefault","setState","defineProperty","target","value","passList","state","input","console","log","react_default","a","createElement","type","name","onChange","Component","ListUser","users","filteredUsers","filter","user","toLowerCase","includes","test","map","i","key","_loaded","ImageLoader","loaded","src","onLoad","_this$props","className","loadedClassName","loadingClassName","objectWithoutProperties","concat","onClick","defaultProps","SignUp","_this$props$match$par","match","params","id","password","_React$createElement","_this$props$match$par2","url","window","$","style","display","justifyContent","placeholder","autoFocus","defaultValue","href","LazyLoad_default","width","height","debounce","offsetVertical","class","src_ImageLoader","Nothing","WrapUp","handleList","data","Fragment","ListUser_ListUser","SearchBar_SearchBar","react_router_dom","to","App","react_router","exact","path","component","status","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fdc0c45.chunk.js","sourcesContent":["import React, { Component } from 'react'\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: ''\n        }\n    }\n    handleInput = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.value]: e.target.value })\n        this.props.passList(e.target.value);\n    }\n\n    render() {\n        console.log('this.props', this.props)\n        return (\n            <div>\n                <input type=\"text\" name=\"input\" onChange={this.handleInput} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class ListUser extends Component {\n\n\n    render() {\n\n        const users = [\n            {\n                name: \"John Doe\"\n            },\n            {\n                name: \"Jessy Jean\"\n            },\n            {\n                name: \"Mary Poppins\"\n            },\n        ]\n\n        const { input } = this.props;\n\n        let filteredUsers =\n            users.filter(user => {\n                return user.name.toLowerCase().includes(input.toLowerCase())\n            })\n\n\n        /* */\n        filteredUsers = (/^(\\s)+/g).test(input) ? users : filteredUsers;\n\n        console.log(this.props.input);\n\n        return (\n            <div>\n                <ul>\n                    {filteredUsers.map((user, i) => <li key={i}> {user.name} </li>)}\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nconst _loaded = {};\n\nclass ImageLoader extends Component {\n\n    //initial state: image loaded stage \n    state = {\n        loaded: _loaded[this.props.src]\n    };\n\n    //define our loading and loaded image classes\n    static defaultProps = {\n        className: \"\",\n        loadingClassName: \"img-loading\",\n        loadedClassName: \"img-loaded\"\n    };\n\n    //image onLoad handler to update state to loaded\n    onLoad = () => {\n        _loaded[this.props.src] = true;\n        this.setState(() => ({ loaded: true }));\n    };\n\n\n    render() {\n\n        let { className, loadedClassName, loadingClassName, ...props } = this.props;\n\n        className = `${className} ${this.state.loaded\n            ? loadedClassName\n            : loadingClassName}`;\n\n        return <img\n            src={this.props.src}\n            onClick={this.props.onClick}\n            className={className}\n            onLoad={this.onLoad} />;\n    }\n}\n\nexport default ImageLoader;","import React, { Component } from 'react'\nimport './SignUp.scss';\nimport { Link } from 'react-router-dom';\nimport LazyLoad from 'react-lazy-load';\nimport ImageLoader from './ImageLoader'\n\nexport default class SignUp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: '',\n            password: ''\n        }\n\n    }\n\n    onChange = e => {\n        const { id, password } = this.props.match.params;\n        this.setState({ [e.target.name]: e.target.value })\n        console.log('this.props', id, password)\n\n    };\n\n\n    render() {\n        const { id, password, url } = this.props.match.params;\n        //id = 'i'\n        console.log(url)\n        console.log(id);\n        return (\n            <div>\n                {window.$}\n                <h3 style={{ display: \"flex\", justifyContent: \"center\" }}>Register {id}!</h3>\n                <div className=\"container\">\n\n                    <form id=\"signup\">\n\n                        <div className=\"header\">\n\n                            <h3>Sign Up {id}</h3>\n\n                            <p>You want to fill out this form</p>\n\n                        </div>\n\n                        <div className=\"sep\"></div>\n\n                        <div className=\"inputs\">\n\n                            <input type=\"email\" name=\"id\" placeholder=\"e-mail\" autoFocus defaultValue={id} onChange={this.onChange} />\n\n                            <input type=\"password\" name=\"password\" placeholder=\"Password\" defaultValue={password} onChange={this.onChange} />\n\n                            <div className=\"checkboxy\">\n                                <input name=\"cecky\" id=\"checky\" value=\"1\" type=\"checkbox\" /><label className=\"terms\">I accept the terms of use</label>\n                            </div>\n\n                            <a id=\"submit\" href=\"/success\">SIGN UP </a>\n\n                        </div>\n\n                    </form>\n\n                </div>\n                <LazyLoad\n                    width={100}\n                    height={100}\n                    debounce={true}\n                    offsetVertical={500}\n                    debounce={false}\n                    throttle={1000}\n                    onContentVisible onContentVisible={() => console.log('what do you want to do here?')}\n                >\n                    <div class=\"img-container\">\n                        <ImageLoader\n                            src=\"https://wallimpex.com/data/out/645/4k-milky-way-wallpaper-10010240.jpg\" //this is the only compulsory prop\n                        />\n                    </div>\n\n                </LazyLoad>\n            </div>\n        )\n    }\n}\n\n\n\n\n","\nimport React, { Component } from 'react'\nimport './Nothing.css'\nexport default class Nothing extends Component {\n    render() {\n        return (\n            <div className=\"c404\">\n                <div id=\"clouds\">\n                    <div className=\"cloud x1\" />\n                    <div className=\"cloud x1_5\" />\n                    <div className=\"cloud x2\" />\n                    <div className=\"cloud x3\" />\n                    <div className=\"cloud x4\" />\n                    <div className=\"cloud x5\" />\n                </div>\n                <div className=\"c\">\n                    <div className=\"_404\">404</div>\n                    <hr />\n                    <div className=\"_1\">THE PAGE</div>\n                    <div className=\"_2\">WAS NOT FOUND</div>\n                    <a className=\"btn\" href=\"../\">BACK TO MARS</a>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar'\nimport ListUser from './ListUser'\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\nimport SignUp from './SignUp'\nimport Nothing from './Nothing.jsx'\n\n\n//const MyContext = React.createContext();\n\n\n/**************************************************/\n\nclass WrapUp extends Component {\n  state = {\n    input: ''\n  }\n\n  handleList = (data) => {\n    this.setState({\n      input: data\n    })\n  }\n\n  render() {\n    window.$ = \"HI\"\n    return (\n      <React.Fragment>\n        <ListUser input={this.state.input} />\n        <SearchBar passList={this.handleList} />\n        <Link to=\"/signup\" style={{ display: \"flex\", justifyContent: \"center\" }} >SignUp</Link>\n        {window.$}\n      </React.Fragment >\n    )\n  }\n\n\n}\n\n/**************************************************/\n\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Router >\n        <div >\n\n\n          <Switch >\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/\" component={WrapUp} />\n            <Route exact path=\"/success\" component={SearchBar} />\n            <Route exact path=\"/signup/:id\" component={SignUp} />\n            <Route path=\"/signup/:id/password/:password\" component={SignUp} />\n            { /* Used when route redirect to */}\n\n            <Route exact path=\"/hi\">\n              <Redirect to=\"/signup\" />\n            </Route>\n            <Route component={Nothing} status={404} />\n          </Switch>\n        </div >\n\n      </Router>\n    );\n  }\n\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}